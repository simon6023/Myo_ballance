scriptId = 'com.thalmic.examples.ballance'
scriptTitle = "Ballance"
scriptDetailsUrl = "" -- We don't have this until it's submitted to the Myo Market

centreYaw = 0
centreRoll = 0
centrePitch = 0
 
deltaRoll = 0
 
YAW_DEADZONE = .1
ROLL_DEADZONE = .2
PITCH_DEADZONE = .1
MOUSE_CONTROL_TOGGLE_DURATION = 1000
 
PI = 3.1416
TWOPI = PI * 2
 
flyingLeft = false
flyingRight = false
flyingUp = false
flyingDown = false
 
togglingMouseControl = 0
mouseEnabled = true
 
printCount = 0

function onUnlock()
	myo.debug("unlocked")
end

function onForegroundWindowChange(app, title)
    myo.debug("onForegroundWindowChange: " .. app .. ", " .. title)
    -- local titleMatch = string.match(title, "Play Race The Sun, a free online game on Kongregate") ~= nil or platform == "MacOS" and app == "unity.Flippfly.RaceTheSun" or platform == "Windows" and app == "RaceTheSun.exe"
    -- myo.controlMouse(titleMatch and mouseEnabled);
    -- if (titleMatch) then
    --     myo.setLockingPolicy("none")
    -- end
    -- return titleMatch;

    local titleMatch = string.match(title, "Ballance") ~= nil or platform == "Windows" and app == "Player.exe"
    myo.controlMouse(titleMatch and mouseEnabled);
    if (titleMatch) then
        myo.setLockingPolicy("none")
        myo.debug("LAUNCH BALLANCE NOW")
    else
        myo.debug("not the right app : " .. title)
    end
    return titleMatch;
end
   
function onPoseEdge(pose, edge)
    myo.debug("onPoseEdge: " .. pose .. ", " .. edge)

    if (edge == "on") then
        if (pose == "fist") then
            centre()
            if (mouseEnabled) then
                toggleMouseControl()
            end
        elseif (pose == "fingersSpread") then
            escape();
        elseif (pose == "waveIn" or pose == "waveOut") then
            if (math.abs(deltaRoll) > ROLL_DEADZONE) then
                jump()
            elseif (pose == "waveIn") then
                leftClick()
            else
                if (mouseEnabled) then
                    toggleMouseControl();
                else
                    togglingMouseControl = myo.getTimeMilliseconds();
                end
            end
        end
    else
        togglingMouseControl = 0
    end
end
 
function activeAppName()
    return "Ballance"
end
 
function centre()
    myo.debug("Centred")
    centreYaw = myo.getYaw()
    centreRoll = myo.getRoll()
    centrePitch = myo.getPitch()
    -- myo.controlMouse(false);
    -- myo.vibrate("short")
    myo.keyboard("return", "press")
end
 
function onPeriodic()
    if (togglingMouseControl > 0 and myo.getTimeMilliseconds() > (togglingMouseControl + MOUSE_CONTROL_TOGGLE_DURATION)) then
        togglingMouseControl = 0
        toggleMouseControl()
    end
    
    if (centreYaw == 0 or centrePitch == 0) then
        return
    end
    local currentYaw = myo.getYaw()
    local currentRoll = myo.getRoll()
    local currentPitch = myo.getPitch()

    local deltaYaw = calculateDeltaRadians(currentYaw, centreYaw)
    deltaRoll = calculateDeltaRadians(currentRoll, centreRoll);
    local deltaPitch = calculatePitchDeltaRadians(currentPitch, centrePitch)

    printCount = printCount + 1
    if printCount >= 200 then
        myo.debug("deltaYaw = " .. deltaYaw .. ", centreYaw = " .. centreYaw .. ", currentYaw = " .. currentYaw)
        myo.debug("deltaRoll = " .. deltaRoll .. " currentRoll = " .. currentRoll)
        myo.debug("deltaPitch = " .. deltaPitch .. " currentPitch = " .. currentPitch)
        printCount = 0
    end
    if (deltaYaw < -YAW_DEADZONE) then
        flyLeft()
    elseif (deltaYaw > YAW_DEADZONE) then
        flyRight()
    else
        flyNeutral()
    end

    if (deltaPitch < -PITCH_DEADZONE) then
        flyDown()
    elseif (deltaPitch > PITCH_DEADZONE) then
        flyUp()
    else
        flyNeutralPitch()
    end
end
 
function flyLeft()
    if (flyingRight) then
        myo.keyboard("right_arrow","up")
        flyingRight = false
    end
    if (not flyingLeft) then
        myo.debug("Flying left");
        myo.keyboard("left_arrow","down")
        flyingLeft = true;
    end
end
 
function flyRight()
    if (flyingLeft) then
        myo.keyboard("left_arrow","up")
        flyingLeft = false
    end
    if (not flyingRight) then
        myo.debug("Flying right");
        myo.keyboard("right_arrow","down")
        flyingRight = true
    end
end

function flyUp()
    if (flyingDown) then
        myo.keyboard("down_arrow","up")
        flyingDown = false
    end
    if (not flyingUp) then
        myo.debug("Flying up");
        myo.keyboard("up_arrow","down")
        flyingRight = true
    end
end

function flyDown()
    if (flyingUp) then
        myo.keyboard("up_arrow","up")
        flyingUp = false
    end
    if (not flyingDown) then
        myo.debug("Flying down");
        myo.keyboard("down_arrow","down")
        flyingDown = true
    end
end
 
function jump()
    myo.debug("Jump!")
    -- myo.keyboard("space","press")
end
 
function flyNeutral()
    if  (flyingLeft) then
        myo.keyboard("left_arrow","up") 
        flyingLeft = false
    end
    if (flyingRight) then
        myo.keyboard("right_arrow","up")
        flyingRight = false
    end
end

function flyNeutralPitch()
    if  (flyingUp) then
        myo.keyboard("up_arrow","up") 
        flyingUp = false
    end
    if  (flyingDown) then
        myo.keyboard("down_arrow","up") 
        flyingDown = false
    end
end
 
function calculateDeltaRadians(currentYaw, centreYaw)
    local deltaYaw = currentYaw - centreYaw
    
    if (deltaYaw > PI) then
        deltaYaw = deltaYaw - TWOPI
    elseif(deltaYaw < -PI) then
        deltaYaw = deltaYaw + TWOPI
    end
    return deltaYaw
end

function calculatePitchDeltaRadians(currentPitch, centrePitch)
    local deltaPitch = currentPitch - centrePitch
    
    if (deltaPitch > PI) then
        deltaPitch = deltaPitch - TWOPI
    elseif(deltaPitch < -PI) then
        deltaPitch = deltaPitch + TWOPI
    end
    return deltaPitch
end
 
function toggleMouseControl()
    mouseEnabled = not mouseEnabled
    -- myo.vibrate("medium")
    if (mouseEnabled) then
        myo.debug("Mouse control enabled")        
        centreYaw = 0
        centrePitch = 0
        flyNeutral()
    else
        myo.debug("Mouse control disabled")
    end
    myo.controlMouse(mouseEnabled);
end
 
function leftClick()
    myo.debug("Left click!")
    myo.mouse("left", "click")
end
 
function escape()
    myo.debug("Escape!")
    centreYaw = 0
    centrePitch = 0
    myo.keyboard("escape","press")
end 